{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sramazoth",
    "home_page_url": "sramazoth.github.io/",
    "feed_url": "sramazoth.github.io/feed.json",
    "description": "Random personnal blog",
    "icon": "sramazoth.github.io/apple-touch-icon.png",
    "favicon": "sramazoth.github.io/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "sramazoth",
        "url": null,
        "avatar": null
    },
    
"items": [
    
        {
            "id": "sramazoth.github.io/2024/03/11/setting-and-using-scapy-mitm",
            "title": "Setting and using scapy mitm",
            "summary": "How to setup and use a mitm with scapy.",
            "content_text": "requirements  two network interfaces:    ip a 1: lo:      [ . . . ]\t     2: eth0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000     link/ether 50:81:40:78:96:ac brd ff:ff:ff:ff:ff:ff 3: eth1: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000     link/ether 50:81:40:88:85:bd brd ff:ff:ff:ff:ff:ff            scapy is installed and working (already done if using kali)        two equipments talking to each other using a physical network (server and client on the schema), I’m not doing wireless mitm here    (bonus) it is needed to disable NetworkManager to avoid interfaces to go off:    sudo systemctl disable NetworkManagersudo systemctl stop NetworkManager      schema(I’m good at drawing garbage schemas)physical steps  disconnect the physical connections between the server and the client  connect both the server and the client to the interfaces of the mitm equipment  verify connectivity with both interfaces, it should be something like:    ip a 1: lo:      [ . . . ]\t     2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000     link/ether 50:81:40:78:96:ac brd ff:ff:ff:ff:ff:ff 3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000     link/ether 50:81:40:88:85:bd brd ff:ff:ff:ff:ff:ff      software steps  write a script to use scapy mitm:```py#!/usr/bin/pythonfrom scapy.all import *def modifyClientResponse(pkt):# do stuff with packetreturn pktdef serverToClient(pkt):\tpkt.show()\treturn True # return packet without modificationdef clientToServer(pkt):\tpkt.show()\tif UDP in pkt: # if packet has layer UDP send packet to packet modifier \t\treturn modified_pkt\treturn True # return packet without modificationif name == “main”:\t# interfaces, based on schema\tinterface_connected_to_server = “eth0”\tinterface_connected_to_client = “eth1”\tbridge_and_sniff(\t\tif1=interface_connected_to_server, \t\tif2=interface_connected_to_client, \t\txfrm12=serverToClient, # function to call for packets coming from if1 to if1\t\txfrm21=clientToServer) # function to call for packets coming from if1 to if1the mitm is now ready as we are using the function `bridge_and_sniff` ([official documentation](https://scapy.readthedocs.io/en/latest/api/scapy.sendrecv.html#scapy.sendrecv.bridge_and_sniff)), which simply get the packets and pass them as arguments to functions depending of the source interface2. launching the script with sudo rights:```shsudo python_mitm.pyit should be working fine",
            "content_html": "<h1 id=\"requirements\">requirements</h1><ol>  <li>two network interfaces:    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ip a 1: lo:      <span class=\"o\">[</span> <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"o\">]</span>\t     2: eth0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000     <span class=\"nb\">link</span>/ether 50:81:40:78:96:ac brd ff:ff:ff:ff:ff:ff 3: eth1: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000     <span class=\"nb\">link</span>/ether 50:81:40:88:85:bd brd ff:ff:ff:ff:ff:ff</code></pre></div>    </div>  </li>  <li>    <p><code class=\"language-plaintext highlighter-rouge\">scapy</code> is installed and working (<em>already done if using kali</em>)</p>  </li>  <li>    <p>two equipments talking to each other using a <strong>physical network</strong> (<em>server and client on the schema</em>), I’m not doing wireless mitm here</p>  </li>  <li>(bonus) it is needed to disable <code class=\"language-plaintext highlighter-rouge\">NetworkManager</code> to avoid interfaces to go off:    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>systemctl disable NetworkManager<span class=\"nb\">sudo </span>systemctl stop NetworkManager</code></pre></div>    </div>  </li></ol><h1 id=\"schema\">schema</h1><p><img src=\"/images/mitm.png\" alt=\"mitm\" />(<em>I’m good at drawing garbage schemas</em>)</p><h1 id=\"physical-steps\">physical steps</h1><ol>  <li>disconnect the physical connections between the server and the client</li>  <li>connect both the server and the client to the interfaces of the mitm equipment</li>  <li>verify connectivity with both interfaces, it should be something like:    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ip a 1: lo:      <span class=\"o\">[</span> <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"o\">]</span>\t     2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000     <span class=\"nb\">link</span>/ether 50:81:40:78:96:ac brd ff:ff:ff:ff:ff:ff 3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000     <span class=\"nb\">link</span>/ether 50:81:40:88:85:bd brd ff:ff:ff:ff:ff:ff</code></pre></div>    </div>  </li></ol><h1 id=\"software-steps\">software steps</h1><ol>  <li>write a script to use scapy mitm:```py#!/usr/bin/python</li></ol><p>from scapy.all import *</p><p>def modifyClientResponse(pkt):</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># do stuff with packetreturn pkt</code></pre></div></div><p>def serverToClient(pkt):\tpkt.show()\treturn True # return packet without modification</p><p>def clientToServer(pkt):\tpkt.show()\tif UDP in pkt: # if packet has layer UDP send packet to packet modifier \t\treturn modified_pkt\treturn True # return packet without modification</p><p>if <strong>name</strong> == “<strong>main</strong>”:\t# interfaces, based on schema\tinterface_connected_to_server = “eth0”\tinterface_connected_to_client = “eth1”\tbridge_and_sniff(\t\tif1=interface_connected_to_server, \t\tif2=interface_connected_to_client, \t\txfrm12=serverToClient, # function to call for packets coming from if1 to if1\t\txfrm21=clientToServer) # function to call for packets coming from if1 to if1</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>the mitm is now ready as we are using the function `bridge_and_sniff` ([official documentation](https://scapy.readthedocs.io/en/latest/api/scapy.sendrecv.html#scapy.sendrecv.bridge_and_sniff)), which simply get the packets and pass them as arguments to functions depending of the source interface2. launching the script with sudo rights:```shsudo python_mitm.py</code></pre></div></div><p>it should be working fine</p>",
            "url": "sramazoth.github.io/2024/03/11/setting-and-using-scapy-mitm",
            
            
            
            "tags": ["network","python"],
            
            "date_published": "2024-03-11T00:00:00+01:00",
            "date_modified": "2024-03-11T00:00:00+01:00",
            
                "author":  {
                "name": "sramazoth",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "sramazoth.github.io/2024/03/11/root-galaxy-14-and-frida",
            "title": "Root Galaxy A14",
            "summary": "How to root a Galaxy A14 and use frida on it.",
            "content_text": "attentionLe téléphone va être réinitialisé deux fois.Si le texte ne suffit pas:  https://www.youtube.com/watch?v=R8-UNyKA6aY : pour rooter le téléphone  https://www.youtube.com/watch?v=CHTfYBB-8n0 : pour désactiver l’OEMpré-requistélécharger le firmwareTélécharger le firmware similaire à celui du téléphone.Pour obtenir la verion exacte, aller sur le téléphone dans paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;version de la bande base:A145RXXU1AWD1https://samfw.com/firmware/SM-A145R/SFR/A145RXXU1AWD1SAMFW.COM_SM-A145R_SFR_A145RXXU1AWD1_fac.zipunzip SAMFW.COM_SM-A145R_SFR_A145RXXU1AWD1_fac.zipll-rw-rw-r--. 1 pouetpouet pouetpouet 6038610042 18 avril 21:00 AP_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT_meta_OS13.tar.md5-rw-rw-r--. 1 pouetpouet pouetpouet    4014192 18 avril 21:00 BL_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5-rw-rw-r--. 1 pouetpouet pouetpouet   32327789 18 avril 21:06 CP_A145RXXU1AWD1_CP24089644_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5-rw-rw-r--. 1 pouetpouet pouetpouet  507545703 18 avril 21:06 CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5-rw-rw-r--. 1 pouetpouet pouetpouet        719  7 févr.  2022 _FirmwareInfo_Samfw.com.txt-rw-rw-r--. 1 pouetpouet pouetpouet  507504748 18 avril 21:06 HOME_CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5téléchager les outils nécessairessudo apt install adb frida android-sdk-build-tools-commonodin pour linux: https://forum.xda-developers.com/t/official-samsung-odin-v4-1-2-1-dc05e3ea-for-linux.4453423/wget https://forum.xda-developers.com/attachments/odin-zip.5629297/unzip odin-zipmagisk: https://github.com/topjohnwu/Magisk/wget https://github.com/topjohnwu/Magisk/releases/download/v26.2/Magisk-v26.2.apkrootingétape 1: préparer le fichier AP rooté  brancher le téléphone au PC via USB  copier l’apk magisk et le fichier AP_A145RXXU1AWD1_[ . . . ]_OS13.tar.md5 sur le téléphone dans Téléchargements  installer l’apk magisk en cliquant sur le fichier à partir du navigateur de fichiers sur le téléphone (il faut autoriser l’installation d’applications non vérifiées)  lancer l’application magisk  cliquer sur le bouton installer  sélectionner le fichier AP  quitter l’application quand le message All done! apparaît  copier depuis le PC le fichier généré (nom: magisk_patched-[ . . . ].tar) par magisk sur le téléphone vers le PCétape 2: débloquer l’OEM  activer le mode développeur sur le téléphone:          cliquer sept fois sur l’onglet paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;numéro de version (un message apparaît quand le mode s’active)        activer l’option OEM unlocking dans paramètres-&gt;options de développement  activer l’option USB debugging dans paramètres-&gt;options de développement  éteindre le téléphone  brancher le téléphone au PC en USB  appuyer et laisser enfoncé en même temps les boutons volume haut et bas jusqu’à l’apparition d’un écran d’avertissement  appuyer plusieurs secondes sur le bouton volume haut pour activer le mode débloqué (OEM)  appuyer sur le bouton volume haut pour confirmer  activer l’option USB debugging dans paramètres-&gt;options de développement une fois le téléphone réinitialiséétape 3: installation du nouveau firmware  éteindre le téléphone  brancher le téléphone au PC en USB  appuyer et laisser enfoncé en même temps les boutons volume haut et bas jusqu’à l’apparition d’un écran d’avertissement  appuyer sur le bouton volume haut pour continuer  vérifier que le mode OEM LOCK est sur OFF (U)  lancer odin sur le PC:    ./odin4 -a magisk_patched-[ . . . ].tar -b BL_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5 -c CP_A145RXXU1AWD1_CP24089644_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5 -s CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5        (si tout se passe bien le PC devrait afficher un pourcentage de progression, et le téléphone une barre de progression)    dérouler la procédure d’installation du téléphone  copier l’apk magisk sur le téléphone dans Téléchargements  installer l’apk magisk en cliquant sur le fichier à partir du navigateur de fichiers sur le téléphone (il faut autoriser l’installation d’applications non vérifiées)  lancer l’application magisk  vérifier que le bouton désinstaller magisk est présent, signe que le téléphone est rootéétape 4: préparer le téléphone pour l’utilisation de frida  sur le téléphone: activer le mode développeur :          cliquer sept fois sur l’onglet paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;numéro de version (un message apparaît quand le mode s’active)        sur le téléphone: activer l’option USB debugging dans paramètres-&gt;options de développement  sur le PC: vérifier que la commande adb devices renvoie bien [un id quelconque]    device et non pas [un id quelconque]    unauthorized  sur le PC:          déterminer l’architecture du téléphone:          adb shell getprop ro.product.cpu.abi  arm64-v8a                    télécharger le fichier frida-server correspondant: https://github.com/frida/frida/releases (pour nous: https://github.com/frida/frida/releases/download/16.1.3/frida-server-16.1.3-android-arm64.xz)          wget https://github.com/frida/frida/releases/download/16.1.3/frida-server-16.1.3-android-arm64.xz  xz -d frida-server-16.1.3-android-arm64.xz  mv frida-server-16.1.3-android-arm64 frida-server                    pousser le fichier frida-server sur le téléphone:          adb push frida-server /data/local/tmp                    lancer un shell avec adb:          adb shell                      sur le téléphone: autoriser le service shell à être superuser: activer com.android.shell dans l’application magisk: onglet Super-Utilisateur  sur le PC: exécuter le binaire frida-server:      adb shell  su  cd /data/local/tmp  chmod 755 frida-server  ./frida-server  exit  exit  frida-ps -U  [renvoie la liste des services sur le téléphone]      ",
            "content_html": "<h1 id=\"attention\">attention</h1><p>Le téléphone va être réinitialisé deux fois.Si le texte ne suffit pas:</p><ul>  <li>https://www.youtube.com/watch?v=R8-UNyKA6aY : pour rooter le téléphone</li>  <li>https://www.youtube.com/watch?v=CHTfYBB-8n0 : pour désactiver l’OEM</li></ul><h1 id=\"pré-requis\">pré-requis</h1><h2 id=\"télécharger-le-firmware\">télécharger le firmware</h2><p>Télécharger le firmware similaire à celui du téléphone.Pour obtenir la verion exacte, aller sur le téléphone dans <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;version de la bande base</code>:<code class=\"language-plaintext highlighter-rouge\">A145RXXU1AWD1</code>https://samfw.com/firmware/SM-A145R/SFR/A145RXXU1AWD1</p><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SAMFW.COM_SM-A145R_SFR_A145RXXU1AWD1_fac.zipunzip SAMFW.COM_SM-A145R_SFR_A145RXXU1AWD1_fac.zipll<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet 6038610042 18 avril 21:00 AP_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT_meta_OS13.tar.md5<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet    4014192 18 avril 21:00 BL_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet   32327789 18 avril 21:06 CP_A145RXXU1AWD1_CP24089644_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet  507545703 18 avril 21:06 CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet        719  7 févr.  2022 _FirmwareInfo_Samfw.com.txt<span class=\"nt\">-rw-rw-r--</span><span class=\"nb\">.</span> 1 pouetpouet pouetpouet  507504748 18 avril 21:06 HOME_CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5</code></pre></div></div><h2 id=\"téléchager-les-outils-nécessaires\">téléchager les outils nécessaires</h2><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>apt <span class=\"nb\">install </span>adb frida android-sdk-build-tools-common</code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">odin</code> pour linux: https://forum.xda-developers.com/t/official-samsung-odin-v4-1-2-1-dc05e3ea-for-linux.4453423/</p><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://forum.xda-developers.com/attachments/odin-zip.5629297/unzip odin-zip</code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">magisk</code>: https://github.com/topjohnwu/Magisk/</p><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://github.com/topjohnwu/Magisk/releases/download/v26.2/Magisk-v26.2.apk</code></pre></div></div><h1 id=\"rooting\">rooting</h1><h2 id=\"étape-1-préparer-le-fichier-ap-rooté\">étape 1: préparer le fichier AP rooté</h2><ul>  <li>brancher le téléphone au PC via USB</li>  <li>copier l’apk <code class=\"language-plaintext highlighter-rouge\">magisk</code> et le fichier <code class=\"language-plaintext highlighter-rouge\">AP_A145RXXU1AWD1_[ . . . ]_OS13.tar.md5</code> sur le téléphone dans <code class=\"language-plaintext highlighter-rouge\">Téléchargements</code></li>  <li>installer l’apk <code class=\"language-plaintext highlighter-rouge\">magisk</code> en cliquant sur le fichier à partir du navigateur de fichiers sur le téléphone (il faut autoriser l’installation d’applications non vérifiées)</li>  <li>lancer l’application <code class=\"language-plaintext highlighter-rouge\">magisk</code></li>  <li>cliquer sur le bouton <code class=\"language-plaintext highlighter-rouge\">installer</code></li>  <li>sélectionner le fichier AP</li>  <li>quitter l’application quand le message <code class=\"language-plaintext highlighter-rouge\">All done!</code> apparaît</li>  <li>copier depuis le PC le fichier généré (nom: <code class=\"language-plaintext highlighter-rouge\">magisk_patched-[ . . . ].tar</code>) par <code class=\"language-plaintext highlighter-rouge\">magisk</code> sur le téléphone vers le PC</li></ul><h2 id=\"étape-2-débloquer-loem\">étape 2: débloquer l’OEM</h2><ul>  <li>activer le mode développeur sur le téléphone:    <ul>      <li>cliquer sept fois sur l’onglet <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;numéro de version</code> (un message apparaît quand le mode s’active)</li>    </ul>  </li>  <li>activer l’option <code class=\"language-plaintext highlighter-rouge\">OEM unlocking</code> dans <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;options de développement</code></li>  <li>activer l’option <code class=\"language-plaintext highlighter-rouge\">USB debugging</code> dans <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;options de développement</code></li>  <li>éteindre le téléphone</li>  <li>brancher le téléphone au PC en USB</li>  <li>appuyer et laisser enfoncé en même temps les boutons <code class=\"language-plaintext highlighter-rouge\">volume haut et bas</code> jusqu’à l’apparition d’un écran d’avertissement</li>  <li>appuyer <strong>plusieurs secondes</strong> sur le bouton <code class=\"language-plaintext highlighter-rouge\">volume haut</code> pour activer le mode débloqué (OEM)</li>  <li>appuyer sur le bouton <code class=\"language-plaintext highlighter-rouge\">volume haut</code> pour confirmer</li>  <li>activer l’option <code class=\"language-plaintext highlighter-rouge\">USB debugging</code> dans <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;options de développement</code> une fois le téléphone réinitialisé</li></ul><h2 id=\"étape-3-installation-du-nouveau-firmware\">étape 3: installation du nouveau firmware</h2><ul>  <li>éteindre le téléphone</li>  <li>brancher le téléphone au PC en USB</li>  <li>appuyer et laisser enfoncé en même temps les boutons <code class=\"language-plaintext highlighter-rouge\">volume haut et bas</code> jusqu’à l’apparition d’un écran d’avertissement</li>  <li>appuyer sur le bouton <code class=\"language-plaintext highlighter-rouge\">volume haut</code> pour continuer</li>  <li>vérifier que le mode <code class=\"language-plaintext highlighter-rouge\">OEM LOCK</code> est sur <code class=\"language-plaintext highlighter-rouge\">OFF (U)</code></li>  <li>lancer <code class=\"language-plaintext highlighter-rouge\">odin</code> sur le PC:    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>./odin4 <span class=\"nt\">-a</span> magisk_patched-[ <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"nb\">.</span> <span class=\"o\">]</span>.tar <span class=\"nt\">-b</span> BL_A145RXXU1AWD1_A145RXXU1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5 <span class=\"nt\">-c</span> CP_A145RXXU1AWD1_CP24089644_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5 <span class=\"nt\">-s</span> CSC_OXM_A145ROXM1AWD1_MQB64354567_REV00_user_low_ship_MULTI_CERT.tar.md5</code></pre></div>    </div>    <p>(si tout se passe bien le PC devrait afficher un pourcentage de progression, et le téléphone une barre de progression)</p>  </li>  <li>dérouler la procédure d’installation du téléphone</li>  <li>copier l’apk <code class=\"language-plaintext highlighter-rouge\">magisk</code> sur le téléphone dans <code class=\"language-plaintext highlighter-rouge\">Téléchargements</code></li>  <li>installer l’apk <code class=\"language-plaintext highlighter-rouge\">magisk</code> en cliquant sur le fichier à partir du navigateur de fichiers sur le téléphone (il faut autoriser l’installation d’applications non vérifiées)</li>  <li>lancer l’application <code class=\"language-plaintext highlighter-rouge\">magisk</code></li>  <li>vérifier que le bouton <code class=\"language-plaintext highlighter-rouge\">désinstaller magisk</code> est présent, signe que le téléphone est rooté</li></ul><h2 id=\"étape-4-préparer-le-téléphone-pour-lutilisation-de-frida\">étape 4: préparer le téléphone pour l’utilisation de frida</h2><ul>  <li>sur le téléphone: activer le mode développeur :    <ul>      <li>cliquer sept fois sur l’onglet <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;à propos du téléphone-&gt;informations sur le logiciel-&gt;numéro de version</code> (un message apparaît quand le mode s’active)</li>    </ul>  </li>  <li>sur le téléphone: activer l’option <code class=\"language-plaintext highlighter-rouge\">USB debugging</code> dans <code class=\"language-plaintext highlighter-rouge\">paramètres-&gt;options de développement</code></li>  <li>sur le PC: vérifier que la commande <code class=\"language-plaintext highlighter-rouge\">adb devices</code> renvoie bien <code class=\"language-plaintext highlighter-rouge\">[un id quelconque]    device</code> et non pas <code class=\"language-plaintext highlighter-rouge\">[un id quelconque]    unauthorized</code></li>  <li>sur le PC:    <ul>      <li>déterminer l’architecture du téléphone:        <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  adb shell getprop ro.product.cpu.abi  arm64-v8a</code></pre></div>        </div>      </li>      <li>télécharger le fichier <code class=\"language-plaintext highlighter-rouge\">frida-server</code> correspondant: https://github.com/frida/frida/releases (pour nous: https://github.com/frida/frida/releases/download/16.1.3/frida-server-16.1.3-android-arm64.xz)        <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  wget https://github.com/frida/frida/releases/download/16.1.3/frida-server-16.1.3-android-arm64.xz  xz <span class=\"nt\">-d</span> frida-server-16.1.3-android-arm64.xz  <span class=\"nb\">mv </span>frida-server-16.1.3-android-arm64 frida-server</code></pre></div>        </div>      </li>      <li>pousser le fichier <code class=\"language-plaintext highlighter-rouge\">frida-server</code> sur le téléphone:        <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  adb push frida-server /data/local/tmp</code></pre></div>        </div>      </li>      <li>lancer un shell avec <code class=\"language-plaintext highlighter-rouge\">adb</code>:        <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  adb shell</code></pre></div>        </div>      </li>    </ul>  </li>  <li>sur le téléphone: autoriser le service <code class=\"language-plaintext highlighter-rouge\">shell</code> à être <code class=\"language-plaintext highlighter-rouge\">superuser</code>: activer <code class=\"language-plaintext highlighter-rouge\">com.android.shell</code> dans l’application <code class=\"language-plaintext highlighter-rouge\">magisk</code>: onglet <code class=\"language-plaintext highlighter-rouge\">Super-Utilisateur</code></li>  <li>sur le PC: exécuter le binaire <code class=\"language-plaintext highlighter-rouge\">frida-server</code>:    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  adb shell  su  <span class=\"nb\">cd</span> /data/local/tmp  <span class=\"nb\">chmod </span>755 frida-server  ./frida-server  <span class=\"nb\">exit  exit  </span>frida-ps <span class=\"nt\">-U</span>  <span class=\"o\">[</span>renvoie la liste des services sur le téléphone]</code></pre></div>    </div>  </li></ul>",
            "url": "sramazoth.github.io/2024/03/11/root-galaxy-14-and-frida",
            
            
            
            
            
            "date_published": "2024-03-11T00:00:00+01:00",
            "date_modified": "2024-03-11T00:00:00+01:00",
            
                "author":  {
                "name": "sramazoth",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "sramazoth.github.io/2023/05/20/little-challenge-to-reverse",
            "title": "Little challenge to reverse",
            "summary": "This is a basic `crack me` binary example to reverse.",
            "content_text": "The challenge is available here: my githubThe code has 5 functions :  main : main function called when binary is executed.  jacky_tunning_banniere : do nothing but showing a cool banner at binary launch.  uncipher_file : will uncipher a file with the secret_key (hardcoded :p).  est_ce_une_bonne_cle : check whether or not the key is correct.  regex_match : function to use regex (totally not taken online).Binary has some options available, but not given that easily (strings).If you want to reverse the binary, the function est_ce_une_bonne_cle is what will be the most interesting.",
            "content_html": "<p>The challenge is available here: <a href=\"https://github.com/Sramazoth/little_key_gen_challenge\">my github</a></p><p>The code has 5 functions :</p><ol>  <li><code class=\"language-plaintext highlighter-rouge\">main</code> : main function called when binary is executed.</li>  <li><code class=\"language-plaintext highlighter-rouge\">jacky_tunning_banniere</code> : do nothing but showing a <em>cool</em> banner at binary launch.</li>  <li><code class=\"language-plaintext highlighter-rouge\">uncipher_file</code> : will uncipher a file with the <code class=\"language-plaintext highlighter-rouge\">secret_key</code> (hardcoded :p).</li>  <li><code class=\"language-plaintext highlighter-rouge\">est_ce_une_bonne_cle</code> : check whether or not the key is correct.</li>  <li><code class=\"language-plaintext highlighter-rouge\">regex_match</code> : function to use regex (<em>totally not taken online</em>).</li></ol><p>Binary has some options available, but not given that <em>easily</em> (<strong>strings</strong>).</p><p>If you want to reverse the binary, the function <code class=\"language-plaintext highlighter-rouge\">est_ce_une_bonne_cle</code> is what will be the most interesting.</p>",
            "url": "sramazoth.github.io/2023/05/20/little-challenge-to-reverse",
            
            
            
            "tags": ["c","reverse"],
            
            "date_published": "2023-05-20T00:00:00+02:00",
            "date_modified": "2023-05-20T00:00:00+02:00",
            
                "author":  {
                "name": "sramazoth",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "sramazoth.github.io/2022/09/15/scan-tier-list",
            "title": "Scan tier list",
            "summary": "A list of good scans.",
            "content_text": "In preference order :1 - The World After The End  Alts: The World After The Fall  Author: S-Cynaan, Sing-Shong, 싱숑  Artist: Undead Potato (Undead Gamja), 언데드 감자  Links:          asurascans      reaperscans        Syn:An original story, brought to you by the author of Omniscient Reader’s Viewpoint, Author Sing-Shong. This is about a man who didn’t regress when everyone else returned back to the past.Humans were suddenly summoned to become “Walkers”, and they needed to clear the tower to save the world. . . Floor 77: The “Stone of Regression” was discovered.Walkers could now “return” to the past. Slowly, everyone left. . . Humanity’s last hope, “Carpe Diem”, was formed, made up of people who refused to abandon the world. . . The last Walker reached floor 100.He no longer knew what to believe.2 - The Return of the Crazy Demon  Alts: The Return of the Mad Demon  Author: Jinseong Yu  Artist: Hi Lee  Links:          asurascans        Syn:Yi Zaha. The crazy demon crazy for martial arts.While he was running away after stealing the heavenly pearl of the Demon Cult Leader, he fell off a cliff.After thinking that everything was over, he opened his eyes to see that he had returned back to when he was a waiter…And he is being beat up for something that he didn’t do.The crazy demon who returned to the beginning of his days as a waiter!Will he go crazy again, or will he drive his enemies crazy?3 - Return of the Mount Hua Sect  Alts: Return of the Blossoming Blade  Author: Biga  Artist: LICO  Links:          asurascans        Syn:Chung Myung, The 13th Disciple of the Mount Hua Sect, One of the 3 Great Swordsmen, Plum Blossom Sword Saint, defeated Chun Ma, who has brought destruction and disarray onto the world. After the battle, he breathes his last breath on top of the headquarter mountain of the Heavenly Demon Sect. He is reborn after 100 years in the body of a child. ……What? The Mount Hua Sect has fallen? What kind of nonsense is that!?4 - Reaper of The Drifting Moon  Alts: Death God of the Drifting Moon  Author: Woo-Gak, Mok-In  Artist: INKY  Links:          asurascans        Syn:From the author of Legend Of The Northern Blade.He’s in the deepest part of the Jianghu. Keep your eyes wide open if you do not wish to get dragged into the abyss.5 - Sword Fanatic Wanders Through The Night6 - My School Life Pretending To Be a Worthless Person7 - Mercenary Enrollment8 - Nano Machine9 - I Grow Stronger By Eating10 - Solo Max-Level Newbie11 - MookHyang - Dark Lady12 - Kill The Hero13 - The Descent of the Demonic Master14 - The Great Mage that Returned After 4000 Years15 - Maxed Out Leveling16 - The Lone Necromancer17 - Tales of Demons and Gods18 - The Beginning After The End19 - Skeleton Soldier Couldn’t Protect the Dungeon20 - How To Live As a Villain21 - Return of the 8th Class Magician22 - Wandering Warrior of Wudang23 - Return of the Disaster-Class Hero24 - Worthless Regression25 - Academy’s Undercover Professor26 - Reincarnation of the Suicidal Battle God27 - Return Of The Shattered Constellation28 - Is this Hero for Real29 - Demon Magic Emperor30 - Abolute Sword Sense31 - Damn Reincarnation32 - Hoarding in Hell33 - Heavenly Sword’s Grand Saga34 - Player Who Returned 10,000 Years Later35 - Demon in Mount Hua Sec",
            "content_html": "<p>In preference order :</p><h2 id=\"1---the-world-after-the-end\">1 - The World After The End</h2><p><img src=\"/images/scans/the-world-after-the-end-cover.webp\" alt=\"world_after_the_end\" /></p><ul>  <li><strong>Alts</strong>: <em>The World After The Fall</em></li>  <li><strong>Author</strong>: S-Cynaan, Sing-Shong, 싱숑</li>  <li><strong>Artist</strong>: Undead Potato (<em>Undead Gamja</em>), 언데드 감자</li>  <li><strong>Links</strong>:    <ul>      <li><a href=\"https://asura.gg/manga/the-world-after-the-end/\">asurascans</a></li>      <li><a href=\"https://reaperscans.com/series/the-world-after-the-fall/\">reaperscans</a></li>    </ul>  </li>  <li><strong>Syn</strong>:An original story, brought to you by the author of <em>Omniscient Reader’s Viewpoint</em>, Author Sing-Shong. This is about a man who didn’t regress when everyone else returned back to the past.Humans were suddenly summoned to become “Walkers”, and they needed to clear the tower to save the world. . . Floor 77: The “Stone of Regression” was discovered.Walkers could now “return” to the past. Slowly, everyone left. . . Humanity’s last hope, “Carpe Diem”, was formed, made up of people who refused to abandon the world. . . The last Walker reached floor 100.He no longer knew what to believe.</li></ul><h2 id=\"2---the-return-of-the-crazy-demon\">2 - The Return of the Crazy Demon</h2><p><img src=\"/images/scans/Crazy_Demon_Cover.webp\" alt=\"return_crazy_demon\" /></p><ul>  <li><strong>Alts</strong>: <em>The Return of the Mad Demon</em></li>  <li><strong>Author</strong>: Jinseong Yu</li>  <li><strong>Artist</strong>: Hi Lee</li>  <li><strong>Links</strong>:    <ul>      <li><a href=\"https://asura.gg/manga/the-return-of-the-crazy-demon/\">asurascans</a></li>    </ul>  </li>  <li><strong>Syn</strong>:Yi Zaha. The crazy demon crazy for martial arts.While he was running away after stealing the heavenly pearl of the Demon Cult Leader, he fell off a cliff.After thinking that everything was over, he opened his eyes to see that he had returned back to when he was a waiter…And he is being beat up for something that he didn’t do.The crazy demon who returned to the beginning of his days as a waiter!Will he go crazy again, or will he drive his enemies crazy?</li></ul><h2 id=\"3---return-of-the-mount-hua-sect\">3 - Return of the Mount Hua Sect</h2><p><img src=\"/images/scans/mount_hua_cover.webp\" alt=\"return_mount_hua_sect\" /></p><ul>  <li><strong>Alts</strong>: <em>Return of the Blossoming Blade</em></li>  <li><strong>Author</strong>: Biga</li>  <li><strong>Artist</strong>: LICO</li>  <li><strong>Links</strong>:    <ul>      <li><a href=\"https://asura.gg/manga/return-of-the-mount-hua-sect/\">asurascans</a></li>    </ul>  </li>  <li><strong>Syn</strong>:Chung Myung, The 13th Disciple of the Mount Hua Sect, One of the 3 Great Swordsmen, Plum Blossom Sword Saint, defeated Chun Ma, who has brought destruction and disarray onto the world. After the battle, he breathes his last breath on top of the headquarter mountain of the Heavenly Demon Sect. He is reborn after 100 years in the body of a child. ……What? The Mount Hua Sect has fallen? What kind of nonsense is that!?</li></ul><h2 id=\"4---reaper-of-the-drifting-moon\">4 - Reaper of The Drifting Moon</h2><p><img src=\"/images/scans/Drifting_Moon.webp\" alt=\"reaper_drifting_moon\" /></p><ul>  <li><strong>Alts</strong>: <em>Death God of the Drifting Moon</em></li>  <li><strong>Author</strong>: Woo-Gak, Mok-In</li>  <li><strong>Artist</strong>: INKY</li>  <li><strong>Links</strong>:    <ul>      <li><a href=\"https://asura.gg/manga/reaper-of-the-drifting-moon/\">asurascans</a></li>    </ul>  </li>  <li><strong>Syn</strong>:<em>From the author of Legend Of The Northern Blade.</em>He’s in the deepest part of the Jianghu. Keep your eyes wide open if you do not wish to get dragged into the abyss.</li></ul><h2 id=\"5---sword-fanatic-wanders-through-the-night\">5 - Sword Fanatic Wanders Through The Night</h2><h2 id=\"6---my-school-life-pretending-to-be-a-worthless-person\">6 - My School Life Pretending To Be a Worthless Person</h2><h2 id=\"7---mercenary-enrollment\">7 - Mercenary Enrollment</h2><h2 id=\"8---nano-machine\">8 - Nano Machine</h2><h2 id=\"9---i-grow-stronger-by-eating\">9 - I Grow Stronger By Eating</h2><h2 id=\"10---solo-max-level-newbie\">10 - Solo Max-Level Newbie</h2><h2 id=\"11---mookhyang---dark-lady\">11 - MookHyang - Dark Lady</h2><h2 id=\"12---kill-the-hero\">12 - Kill The Hero</h2><h2 id=\"13---the-descent-of-the-demonic-master\">13 - The Descent of the Demonic Master</h2><h2 id=\"14---the-great-mage-that-returned-after-4000-years\">14 - The Great Mage that Returned After 4000 Years</h2><h2 id=\"15---maxed-out-leveling\">15 - Maxed Out Leveling</h2><h2 id=\"16---the-lone-necromancer\">16 - The Lone Necromancer</h2><h2 id=\"17---tales-of-demons-and-gods\">17 - Tales of Demons and Gods</h2><h2 id=\"18---the-beginning-after-the-end\">18 - The Beginning After The End</h2><h2 id=\"19---skeleton-soldier-couldnt-protect-the-dungeon\">19 - Skeleton Soldier Couldn’t Protect the Dungeon</h2><h2 id=\"20---how-to-live-as-a-villain\">20 - How To Live As a Villain</h2><h2 id=\"21---return-of-the-8th-class-magician\">21 - Return of the 8th Class Magician</h2><h2 id=\"22---wandering-warrior-of-wudang\">22 - Wandering Warrior of Wudang</h2><h2 id=\"23---return-of-the-disaster-class-hero\">23 - Return of the Disaster-Class Hero</h2><h2 id=\"24---worthless-regression\">24 - Worthless Regression</h2><h2 id=\"25---academys-undercover-professor\">25 - Academy’s Undercover Professor</h2><h2 id=\"26---reincarnation-of-the-suicidal-battle-god\">26 - Reincarnation of the Suicidal Battle God</h2><h2 id=\"27---return-of-the-shattered-constellation\">27 - Return Of The Shattered Constellation</h2><h2 id=\"28---is-this-hero-for-real\">28 - Is this Hero for Real</h2><h2 id=\"29---demon-magic-emperor\">29 - Demon Magic Emperor</h2><h2 id=\"30---abolute-sword-sense\">30 - Abolute Sword Sense</h2><h2 id=\"31---damn-reincarnation\">31 - Damn Reincarnation</h2><h2 id=\"32---hoarding-in-hell\">32 - Hoarding in Hell</h2><h2 id=\"33---heavenly-swords-grand-saga\">33 - Heavenly Sword’s Grand Saga</h2><h2 id=\"34---player-who-returned-10000-years-later\">34 - Player Who Returned 10,000 Years Later</h2><h2 id=\"35---demon-in-mount-hua-sec\">35 - Demon in Mount Hua Sec</h2>",
            "url": "sramazoth.github.io/2022/09/15/scan-tier-list",
            
            
            
            "tags": ["scan","list"],
            
            "date_published": "2022-09-15T00:00:00+02:00",
            "date_modified": "2022-09-15T00:00:00+02:00",
            
                "author":  {
                "name": "sramazoth",
                "url": null,
                "avatar": null
                }
                
            
        }
    
    ]
}